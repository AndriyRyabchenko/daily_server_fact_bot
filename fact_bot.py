import os
import logging
import asyncio
from openai import OpenAI
from telegram import Bot
from dotenv import load_dotenv

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")

LOG_FILE = "fact_bot.log"
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

def get_server_fact():
    client = OpenAI(api_key=OPENAI_API_KEY)
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{
                "role": "user",
                "content": "–ó–≥–µ–Ω–µ—Ä—É–π –æ–¥–∏–Ω —Ü—ñ–∫–∞–≤–∏–π, —Ç–µ—Ö–Ω—ñ—á–Ω–æ –¥–æ—Å—Ç–æ–≤—ñ—Ä–Ω–∏–π —Ñ–∞–∫—Ç –∑—ñ —Å–≤—ñ—Ç—É —Å–µ—Ä–≤–µ—Ä—ñ–≤. –ë–µ–∑ –≤–∏–≥–∞–¥–∫–∏, –ª–∏—à–µ –ø—Ä–∞–≤–¥–∏–≤—ñ –¥–∞–Ω—ñ. –°—Ç–∏—Å–ª–æ, –∑—Ä–æ–∑—É–º—ñ–ª–æ, –¥–æ 50 —Å–ª—ñ–≤. –ë–µ–∑ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è, –±–µ–∑ –∑–≤–µ—Ä—Ç–∞–Ω—å, –±–µ–∑ –∂–∞—Ä—Ç—ñ–≤. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å —ñ –ª–æ–≥—ñ–∫–∞."
            }],
            temperature=0.7
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logging.error(f"‚ùå OpenAI error: {e}")
        return None

async def send_to_telegram(fact):
    try:
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        await bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=f"üñ•Ô∏è –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:\n\n{fact}")
        logging.info(f"‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ —Ñ–∞–∫—Ç: {fact}")
        return True
    except Exception as e:
        logging.error(f"‚ùå Telegram error: {e}")
        return False

def main():
    fact = get_server_fact()
    if not fact:
        logging.error("‚ùå –§–∞–∫—Ç –Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.")
        return

    asyncio.run(send_to_telegram(fact))

if __name__ == "__main__":
    main()