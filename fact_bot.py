import os
import logging
from openai import OpenAI
from telegram import Bot
from dotenv import load_dotenv

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env
load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")

# === –õ–æ–≥-—Ñ–∞–π–ª
LOG_FILE = "fact_bot.log"
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

# === –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ñ–∞–∫—Ç—É
def get_server_fact():
    client = OpenAI(api_key=OPENAI_API_KEY)

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{
                "role": "user",
                "content": "–ó–≥–µ–Ω–µ—Ä—É–π –æ–¥–∏–Ω —Ü—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç –∑—ñ —Å–≤—ñ—Ç—É —Å–µ—Ä–≤–µ—Ä—ñ–≤. –ö–æ—Ä–æ—Ç–∫–æ —ñ –ø—Ä–æ—Å—Ç–æ, –¥–æ 50 —Å–ª—ñ–≤. –ë–µ–∑ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è."
            }],
            temperature=0.7
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logging.error(f"‚ùå OpenAI error: {e}")
        return None

# === –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤ Telegram
def send_to_telegram(fact):
    try:
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=f"üñ•Ô∏è –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:\n\n{fact}")
        logging.info(f"‚úÖ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ —Ñ–∞–∫—Ç: {fact}")
        return True
    except Exception as e:
        logging.error(f"‚ùå Telegram error: {e}")
        return False

# === Main
def main():
    fact = get_server_fact()
    if not fact:
        logging.error("‚ùå –§–∞–∫—Ç –Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.")
        return

    if not send_to_telegram(fact):
        logging.warning(f"‚ö†Ô∏è –§–∞–∫—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É: {fact}")

if __name__ == "__main__":
    main()