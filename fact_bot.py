import os
import openai
import logging
from telegram import Bot
from dotenv import load_dotenv

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –∑ .env ===
load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤ ===
logging.basicConfig(
    filename='fact_bot.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

# === –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è –≤–∂–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏—Ö —Ñ–∞–∫—Ç—ñ–≤ ===
SENT_FACTS_FILE = "sent_facts.txt"
def is_fact_already_sent(fact):
    if not os.path.exists(SENT_FACTS_FILE):
        return False
    with open(SENT_FACTS_FILE, "r", encoding="utf-8") as f:
        return fact in f.read()

def save_fact(fact):
    with open(SENT_FACTS_FILE, "a", encoding="utf-8") as f:
        f.write(fact + "\n")

# === –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–∫—Ç—É –≤—ñ–¥ OpenAI ===
def get_server_fact():
    openai.api_key = OPENAI_API_KEY
    prompt = (
        "–ó–≥–µ–Ω–µ—Ä—É–π –æ–¥–∏–Ω —Ü—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç –∑—ñ —Å–≤—ñ—Ç—É —Å–µ—Ä–≤–µ—Ä—ñ–≤, –∫–æ—Ä–æ—Ç–∫–æ, –ø—Ä–æ—Å—Ç–æ—é –º–æ–≤–æ—é, "
        "—É —Å—Ç–∏–ª—ñ –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ Telegram-–∫–∞–Ω–∞–ª—ñ. –ú–∞–∫—Å–∏–º—É–º 50 —Å–ª—ñ–≤. –ë–µ–∑ –∑–∞–π–≤–æ–≥–æ –≤—Å—Ç—É–ø—É, –ª–∏—à–µ —Ñ–∞–∫—Ç."
    )
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.7,
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ OpenAI: {e}")
        return None

# === –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ Telegram ===
def post_to_telegram(text):
    try:
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=f"üñ•Ô∏è –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç:\n\n{text}")
        logging.info(f"–§–∞–∫—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ: {text}")
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –¥–æ Telegram: {e}")

# === –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ===
def main():
    fact = get_server_fact()
    if not fact:
        return

    if is_fact_already_sent(fact):
        logging.warning("–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π —Ñ–∞–∫—Ç —É–∂–µ –±—É–≤ —Ä–∞–Ω—ñ—à–µ. –ü—Ä–æ–ø—É—â–µ–Ω–æ.")
        return

    post_to_telegram(fact)
    save_fact(fact)

if __name__ == "__main__":
    main()